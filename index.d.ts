export = PageSystem;
declare class PageSystem {
    constructor(client: any);
    client: Discord.Client;
    index: number;
    id: string;
    embeds: Discord.MessageEmbed[];
    message: Discord.Message<any> | null;
    interaction: Discord.Interaction<any> | null;
    collector: Discord.InteractionCollector<Discord.ButtonInteraction<Discord.CacheType>>;
    ended: boolean;
    started: boolean;
    deleted: boolean;
    duration: number;
    emojis: {
        previous: string;
        stop: string;
        next: string;
    };
    footer: (index: any, total: any) => string;
    filter: (i: any) => boolean;
    get ctx(): "MESSAGE" | "INTERACTION";
    get _row(): {
        name: string;
        emoji: any;
        style: string;
    }[];
    get type(): string;
    get endUntill(): number;
    getRow(disabled?: boolean): Discord.MessageActionRow | null;
    setUserID(user: Discord.UserResolvable): this;
    setFooter(func: Function): this;
    setEmbeds(embeds: Discord.MessageEmbed[]): this;
    addEmbed(embed: Discord.MessageEmbed): this;
    fixEmbeds(embeds: Discord.MessageEmbed | Discord.MessageEmbed[] | Discord.MessageEmbed[][]): Discord.MessageEmbed[];
    addEmbeds(embeds: Discord.MessageEmbed[]): this;
    setDuration(duration: number): this;
    addDuration(duration: number): this;
    next(): Promise<void> | import(".");
    previous(): Promise<void> | import(".");
    setIndex(index: number): this;
    edit(opts: Discord.MessageEditOptions): Promise<Discord.Message<boolean>>;
    disableButtons(): Promise<Discord.Message<boolean>>;
    end(): Promise<void> | Promise<Discord.Message<boolean>>;
    delete(): Promise<Discord.Message<boolean>>;
    get currentEmbed(): Discord.MessageEmbed;
    update(): Promise<Discord.Message<boolean>>;
    getOpts(disabled?: boolean): {
        embeds: Discord.MessageEmbed[];
        components: Discord.MessageActionRow[];
    };
    isMessage(): boolean;
    isInteraction(): boolean;
    canEdit(): boolean;
    isValidCtx(ctx: any): boolean;
    checkForErrors(msg: any): any[];
    start(ctx: any): Promise<Discord.Message<boolean>>;
    reply: Discord.Message;
}
import Discord = require("discord.js");
